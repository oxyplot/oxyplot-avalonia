jobs:
- job: Windows
  pool:
    vmImage: 'windows-latest'
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  steps:
  - task: NuGetToolInstaller@1
  - task: NuGetCommand@2
    inputs:
      restoreSolution: '$(solution)'
  - task: VSBuild@1
    inputs:
      solution: '$(solution)'
      msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactStagingDirectory)"'
      platform: '$(buildPlatform)'
      configuration: '$(buildConfiguration)'
  - script: cd ./Source/OxyPlot.Avalonia && dotnet pack --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory) /p:VersionSuffix="$(Build.BuildNumber)"
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
      artifactName: 'OxyPlot.Avalonia'
  - task: NuGetCommand@2
    displayName: 'nuget push'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: 'push'
      feedsToUse: 'select'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: 'OxyPlot.Avalonia/OxyPlot.Avalonia-CI'
      versioningScheme: 'byPrereleaseNumber'
- job: Linux
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  steps:
  - script: cd ./Source && dotnet build OxyPlot.Avalonia.csproj --configuration $(buildConfiguration)
